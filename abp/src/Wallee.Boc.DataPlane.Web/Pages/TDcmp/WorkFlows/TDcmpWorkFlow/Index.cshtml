@page
@using Wallee.Boc.DataPlane.Permissions
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Mvc.Localization
@using Volo.Abp.AspNetCore.Mvc.UI.Layout
@using Wallee.Boc.DataPlane.Web.Pages.Components.TDcmpWorkFlow;
@using Wallee.Boc.DataPlane.Web.Pages.TDcmp.WorkFlows.TDcmpWorkFlow
@using Wallee.Boc.DataPlane.Localization
@using Wallee.Boc.DataPlane.Web.Menus
@model IndexModel
@inject IPageLayout PageLayout
@inject IHtmlLocalizer<DataPlaneResource> L
@inject IAuthorizationService Authorization
@{
    PageLayout.Content.Title = L["TDcmpWorkFlow"].Value;
    PageLayout.Content.BreadCrumb.Add(L["Menu:TDcmpWorkFlow"].Value);
    PageLayout.Content.MenuItemName = DataPlaneMenus.TDcmp_WorkFlow;
}

@section scripts
    {
    <abp-script src="/Pages/TDcmp/WorkFlows/TDcmpWorkFlow/index.js" />
}
@section styles
    {
    <abp-style src="/Pages/TDcmp/WorkFlows/TDcmpWorkFlow/index.css" />
}

<abp-card>
    <abp-card-header>
        <abp-row>
            <abp-column size-md="_6">
                <abp-card-title>@L["TDcmpWorkFlow"]</abp-card-title>
            </abp-column>
            <abp-column size-md="_6" class="text-end">
                @if (await Authorization.IsGrantedAsync(DataPlanePermissions.TDcmpWorkFlow.Create))
                {
                    <abp-button id="NewTDcmpWorkFlowButton"
                                text="@L["CreateTDcmpWorkFlow"].Value"
                                icon="plus"
                                button-type="Primary" />
                }
            </abp-column>
        </abp-row>
    </abp-card-header>
    <abp-card-body>
        <abp-row>
            <abp-column size="_12" id="tDcmpWorkFlowWidget">@await Component.InvokeAsync(typeof(TDcmpWorkFlowViewComponent))</abp-column>
        </abp-row>
        <abp-table striped-rows="true" id="TDcmpWorkFlowTable" class="nowrap" />
    </abp-card-body>
</abp-card>
