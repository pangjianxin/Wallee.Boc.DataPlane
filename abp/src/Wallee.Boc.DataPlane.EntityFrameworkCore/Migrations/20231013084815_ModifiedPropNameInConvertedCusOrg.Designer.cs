// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Volo.Abp.EntityFrameworkCore;
using Wallee.Boc.DataPlane.EntityFrameworkCore;

#nullable disable

namespace Wallee.Boc.DataPlane.Migrations
{
    [DbContext(typeof(DataPlaneDbContext))]
    [Migration("20231013084815_ModifiedPropNameInConvertedCusOrg")]
    partial class ModifiedPropNameInConvertedCusOrg
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("_Abp_DatabaseProvider", EfCoreDatabaseProvider.SqlServer)
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Volo.Abp.AuditLogging.AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApplicationName")
                        .HasMaxLength(96)
                        .HasColumnType("nvarchar(96)")
                        .HasColumnName("ApplicationName");

                    b.Property<string>("BrowserInfo")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("BrowserInfo");

                    b.Property<string>("ClientId")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("ClientId");

                    b.Property<string>("ClientIpAddress")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("ClientIpAddress");

                    b.Property<string>("ClientName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("ClientName");

                    b.Property<string>("Comments")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("Comments");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<string>("CorrelationId")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("CorrelationId");

                    b.Property<string>("Exceptions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExecutionDuration")
                        .HasColumnType("int")
                        .HasColumnName("ExecutionDuration");

                    b.Property<DateTime>("ExecutionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("HttpMethod")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("HttpMethod");

                    b.Property<int?>("HttpStatusCode")
                        .HasColumnType("int")
                        .HasColumnName("HttpStatusCode");

                    b.Property<Guid?>("ImpersonatorTenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ImpersonatorTenantId");

                    b.Property<string>("ImpersonatorTenantName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("ImpersonatorTenantName");

                    b.Property<Guid?>("ImpersonatorUserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ImpersonatorUserId");

                    b.Property<string>("ImpersonatorUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("ImpersonatorUserName");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.Property<string>("TenantName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("TenantName");

                    b.Property<string>("Url")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("Url");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserId");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("UserName");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "ExecutionTime");

                    b.HasIndex("TenantId", "UserId", "ExecutionTime");

                    b.ToTable("AbpAuditLogs", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.AuditLogging.AuditLogAction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AuditLogId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AuditLogId");

                    b.Property<int>("ExecutionDuration")
                        .HasColumnType("int")
                        .HasColumnName("ExecutionDuration");

                    b.Property<DateTime>("ExecutionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("ExecutionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("MethodName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("MethodName");

                    b.Property<string>("Parameters")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("Parameters");

                    b.Property<string>("ServiceName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("ServiceName");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("AuditLogId");

                    b.HasIndex("TenantId", "ServiceName", "MethodName", "ExecutionTime");

                    b.ToTable("AbpAuditLogActions", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.AuditLogging.EntityChange", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AuditLogId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AuditLogId");

                    b.Property<DateTime>("ChangeTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("ChangeTime");

                    b.Property<byte>("ChangeType")
                        .HasColumnType("tinyint")
                        .HasColumnName("ChangeType");

                    b.Property<string>("EntityId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("EntityId");

                    b.Property<Guid?>("EntityTenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EntityTypeFullName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("EntityTypeFullName");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("AuditLogId");

                    b.HasIndex("TenantId", "EntityTypeFullName", "EntityId");

                    b.ToTable("AbpEntityChanges", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.AuditLogging.EntityPropertyChange", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EntityChangeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NewValue")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("NewValue");

                    b.Property<string>("OriginalValue")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("OriginalValue");

                    b.Property<string>("PropertyName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("PropertyName");

                    b.Property<string>("PropertyTypeFullName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("PropertyTypeFullName");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("EntityChangeId");

                    b.ToTable("AbpEntityPropertyChanges", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.BackgroundJobs.BackgroundJobRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsAbandoned")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("JobArgs")
                        .IsRequired()
                        .HasMaxLength(1048576)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("LastTryTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NextTryTime")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Priority")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)15);

                    b.Property<short>("TryCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)0);

                    b.HasKey("Id");

                    b.HasIndex("IsAbandoned", "NextTryTime");

                    b.ToTable("AbpBackgroundJobs", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.FeatureManagement.FeatureDefinitionRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AllowedProviders")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("DefaultValue")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("IsAvailableToHost")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibleToClients")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ParentName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ValueType")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.HasKey("Id");

                    b.HasIndex("GroupName");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("AbpFeatures", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.FeatureManagement.FeatureGroupDefinitionRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("AbpFeatureGroups", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.FeatureManagement.FeatureValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("ProviderName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("Name", "ProviderName", "ProviderKey")
                        .IsUnique()
                        .HasFilter("[ProviderName] IS NOT NULL AND [ProviderKey] IS NOT NULL");

                    b.ToTable("AbpFeatureValues", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityClaimType", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsStatic")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Regex")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("RegexDescription")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("Required")
                        .HasColumnType("bit");

                    b.Property<int>("ValueType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AbpClaimTypes", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityLinkUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SourceTenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SourceUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TargetTenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TargetUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SourceUserId", "SourceTenantId", "TargetUserId", "TargetTenantId")
                        .IsUnique()
                        .HasFilter("[SourceTenantId] IS NOT NULL AND [TargetTenantId] IS NOT NULL");

                    b.ToTable("AbpLinkUsers", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityRole", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<int>("EntityVersion")
                        .HasColumnType("int");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit")
                        .HasColumnName("IsDefault");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit")
                        .HasColumnName("IsPublic");

                    b.Property<bool>("IsStatic")
                        .HasColumnType("bit")
                        .HasColumnName("IsStatic");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName");

                    b.ToTable("AbpRoles", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityRoleClaim", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClaimType")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ClaimValue")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AbpRoleClaims", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentitySecurityLog", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Action")
                        .HasMaxLength(96)
                        .HasColumnType("nvarchar(96)");

                    b.Property<string>("ApplicationName")
                        .HasMaxLength(96)
                        .HasColumnType("nvarchar(96)");

                    b.Property<string>("BrowserInfo")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("ClientId")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("ClientIpAddress")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<string>("CorrelationId")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("Identity")
                        .HasMaxLength(96)
                        .HasColumnType("nvarchar(96)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.Property<string>("TenantName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "Action");

                    b.HasIndex("TenantId", "ApplicationName");

                    b.HasIndex("TenantId", "Identity");

                    b.HasIndex("TenantId", "UserId");

                    b.ToTable("AbpSecurityLogs", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("Email");

                    b.Property<bool>("EmailConfirmed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("EmailConfirmed");

                    b.Property<int>("EntityVersion")
                        .HasColumnType("int");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsExternal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsExternal");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<DateTimeOffset?>("LastPasswordChangeTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("LockoutEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("Name");

                    b.Property<string>("NormalizedEmail")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("NormalizedEmail");

                    b.Property<string>("NormalizedUserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("NormalizedUserName");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("PasswordHash");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("SecurityStamp");

                    b.Property<bool>("ShouldChangePasswordOnNextLogin")
                        .HasColumnType("bit");

                    b.Property<string>("Surname")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("Surname");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.Property<bool>("TwoFactorEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("UserName");

                    b.HasKey("Id");

                    b.HasIndex("Email");

                    b.HasIndex("NormalizedEmail");

                    b.HasIndex("NormalizedUserName");

                    b.HasIndex("UserName");

                    b.ToTable("AbpUsers", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityUserClaim", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClaimType")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ClaimValue")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AbpUserClaims", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityUserDelegation", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("SourceUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("TargetUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.ToTable("AbpUserDelegations", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityUserLogin", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("ProviderDisplayName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .IsRequired()
                        .HasMaxLength(196)
                        .HasColumnType("nvarchar(196)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("UserId", "LoginProvider");

                    b.HasIndex("LoginProvider", "ProviderKey");

                    b.ToTable("AbpUserLogins", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityUserOrganizationUnit", b =>
                {
                    b.Property<Guid>("OrganizationUnitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("OrganizationUnitId", "UserId");

                    b.HasIndex("UserId", "OrganizationUnitId");

                    b.ToTable("AbpUserOrganizationUnits", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityUserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId", "UserId");

                    b.ToTable("AbpUserRoles", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityUserToken", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AbpUserTokens", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Identity.OrganizationUnit", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(95)
                        .HasColumnType("nvarchar(95)")
                        .HasColumnName("Code");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("DisplayName");

                    b.Property<int>("EntityVersion")
                        .HasColumnType("int");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("OrgNo")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("OrgNo")
                        .IsUnique();

                    b.HasIndex("ParentId");

                    b.ToTable("AbpOrganizationUnits", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Identity.OrganizationUnitRole", b =>
                {
                    b.Property<Guid>("OrganizationUnitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("OrganizationUnitId", "RoleId");

                    b.HasIndex("RoleId", "OrganizationUnitId");

                    b.ToTable("AbpOrganizationUnitRoles", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.OpenIddict.Applications.OpenIddictApplication", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClientId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ClientSecret")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientUri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<string>("ConsentType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayNames")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("LogoUri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Permissions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostLogoutRedirectUris")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Properties")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RedirectUris")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Requirements")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("OpenIddictApplications", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.OpenIddict.Authorizations.OpenIddictAuthorization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Properties")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Scopes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Subject")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId", "Status", "Subject", "Type");

                    b.ToTable("OpenIddictAuthorizations", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.OpenIddict.Scopes.OpenIddictScope", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descriptions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayNames")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Properties")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resources")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("OpenIddictScopes", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.OpenIddict.Tokens.OpenIddictToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AuthorizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Payload")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Properties")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RedemptionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReferenceId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Subject")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorizationId");

                    b.HasIndex("ReferenceId");

                    b.HasIndex("ApplicationId", "Status", "Subject", "Type");

                    b.ToTable("OpenIddictTokens", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.PermissionManagement.PermissionDefinitionRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<byte>("MultiTenancySide")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ParentName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Providers")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("StateCheckers")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("GroupName");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("AbpPermissions", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.PermissionManagement.PermissionGrant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("ProviderName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "Name", "ProviderName", "ProviderKey")
                        .IsUnique()
                        .HasFilter("[TenantId] IS NOT NULL");

                    b.ToTable("AbpPermissionGrants", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.PermissionManagement.PermissionGroupDefinitionRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("AbpPermissionGroups", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.SettingManagement.Setting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("ProviderName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.HasKey("Id");

                    b.HasIndex("Name", "ProviderName", "ProviderKey")
                        .IsUnique()
                        .HasFilter("[ProviderName] IS NOT NULL AND [ProviderKey] IS NOT NULL");

                    b.ToTable("AbpSettings", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.SettingManagement.SettingDefinitionRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DefaultValue")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsEncrypted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInherited")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibleToClients")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Providers")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("AbpSettingDefinitions", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.TenantManagement.Tenant", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<int>("EntityVersion")
                        .HasColumnType("int");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("AbpTenants", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.TenantManagement.TenantConnectionString", b =>
                {
                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.HasKey("TenantId", "Name");

                    b.ToTable("AbpTenantConnectionStrings", (string)null);
                });

            modelBuilder.Entity("Wallee.Boc.DataPlane.Dictionaries.OrgUnitHierarchy", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("Identity")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Identity")
                        .IsUnique();

                    b.ToTable("AppOrgUnitHierarchies", null, t =>
                        {
                            t.HasComment("机构层级表");
                        });
                });

            modelBuilder.Entity("Wallee.Boc.DataPlane.Dictionaries.OrganizationUnitCoordinate", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("OrgName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("OrgNo")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("RegionCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppOrganizationUnitCoordinates", (string)null);
                });

            modelBuilder.Entity("Wallee.Boc.DataPlane.Reports.Pa.ConvertedCusOrgUnits.ConvertedCusOrgUnit", b =>
                {
                    b.Property<DateTime>("DataDate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(0);

                    b.Property<string>("Identity")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasColumnOrder(1);

                    b.Property<decimal>("FifthLevel")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FirstLevel")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FourthLevel")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ParentIdentity")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("ParentName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("SecondLevel")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SixthLevel")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ThirdLevel")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("DataDate", "Identity");

                    b.ToTable("AppConvertedCusOrgUnits", null, t =>
                        {
                            t.HasComment("折效客户机构分布情况");
                        });
                });

            modelBuilder.Entity("Wallee.Boc.DataPlane.Reports.Pa.ConvertedCuses.ConvertedCus", b =>
                {
                    b.Property<DateTime>("DataDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Cusidt")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DepCurBal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DepYavBal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("OrgName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Orgidt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DataDate", "Cusidt");

                    b.ToTable("AppConvertedCus", null, t =>
                        {
                            t.HasComment("折效客户明细");
                        });
                });

            modelBuilder.Entity("Wallee.Boc.DataPlane.Reports.Pa.ConvertedCuses.CusOrgAdjusment", b =>
                {
                    b.Property<string>("Cusidt")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Orgidt")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Cusidt");

                    b.ToTable("AppCusOrgAdjusments", null, t =>
                        {
                            t.HasComment("客户机构调整");
                        });
                });

            modelBuilder.Entity("Wallee.Boc.DataPlane.TDcmp.CcicAddresses.CcicAddress", b =>
                {
                    b.Property<string>("CUSNO")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ADDR_TP")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ADDR_SN")
                        .HasColumnType("int");

                    b.Property<string>("LGPER_CODE")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ADDR1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ADDR_LANG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BKCD_URBN_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CITY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CNRG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CNTY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CRTR_TLR_REFNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CRT_DTTM")
                        .HasColumnType("datetime2");

                    b.Property<string>("CRT_TLR_ORG_REFNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CTY_LNG_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CTY_RGON_RSK_GRD_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CUR_ACDT_PERI")
                        .HasColumnType("datetime2");

                    b.Property<string>("DEL_FLAG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LAST_MNT_STS_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LAST_MOD_DTTM")
                        .HasColumnType("datetime2");

                    b.Property<string>("LTST_MOD_TLR_REFNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MOD_TLR_ORG_REFNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PRVC_MNCP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PSALC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PS_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RCRD_CLNUP_STSCD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RCRD_VRSN_SN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("REL_DES")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("REL_END_DT")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("REL_END_TIME")
                        .HasColumnType("time");

                    b.Property<DateTime?>("REL_STRT_DT")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("REL_STRT_TIME")
                        .HasColumnType("time");

                    b.Property<string>("REL_TP_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RLTV_UNNPY_URBN_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RTNPT_FLAG")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CUSNO", "ADDR_TP", "ADDR_SN", "LGPER_CODE");

                    b.ToTable("AppCcicAddresses", (string)null);
                });

            modelBuilder.Entity("Wallee.Boc.DataPlane.TDcmp.CcicAntiMoneyLaunderings.CcicAntiMoneyLaundering", b =>
                {
                    b.Property<string>("CUSNO")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AML_INF_SN")
                        .HasColumnType("int");

                    b.Property<string>("LGPER_CODE")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("AML_RSK_GRD_VLD_START_DT")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("AML_RSK_GRD_VLD_TMT_DT")
                        .HasColumnType("datetime2");

                    b.Property<string>("BENEO_ID_INFO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CANNO_ID_BENEO_REASN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CRRCUS_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CRR_RSK_GRD_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CRTR_TLR_REFNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CRT_DTTM")
                        .HasColumnType("datetime2");

                    b.Property<string>("CRT_TLR_ORG_REFNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CUR_ACDT_PERI")
                        .HasColumnType("datetime2");

                    b.Property<string>("DEL_FLAG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("EXPC_MO_TXN_SZ_AMT")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("EXPC_MO_TXN_SZ_CUR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EXST_EXT_SANCT_NMLST_FLAG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LAST_MNT_STS_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LAST_MOD_DTTM")
                        .HasColumnType("datetime2");

                    b.Property<string>("LTST_MOD_TLR_REFNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MOD_TLR_ORG_REFNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("POLI_FLAG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PURPOSE_REMARK")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RCRD_CLNUP_STSCD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RCRD_VRSN_SN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SDD_CUS_TP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TE_CUSRL_PPS")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CUSNO", "AML_INF_SN", "LGPER_CODE");

                    b.ToTable("AppCcicAntiMoneyLaunderings", null, t =>
                        {
                            t.HasComment("对公反洗钱信息-a02");
                        });
                });

            modelBuilder.Entity("Wallee.Boc.DataPlane.TDcmp.CcicBasics.CcicBasic", b =>
                {
                    b.Property<string>("CUSNO")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LGPER_CODE")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AL_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BLG_ORG_REFNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CLS_DT")
                        .HasColumnType("datetime2");

                    b.Property<string>("COMM_LNG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CRTR_TLR_REFNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CRT_DTTM")
                        .HasColumnType("datetime2");

                    b.Property<string>("CRT_TLR_ORG_REFNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CSMGR_TLR_REFNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CSTST")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CUR_ACDT_PERI")
                        .HasColumnType("datetime2");

                    b.Property<string>("CUSRL_TE_CHNL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DEL_FLAG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DSABL_REASN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DSABL_REASN_NOTE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LAST_CNMDT_PERI")
                        .HasColumnType("datetime2");

                    b.Property<string>("LAST_MNT_STS_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LAST_MOD_DTTM")
                        .HasColumnType("datetime2");

                    b.Property<string>("LTST_MOD_TLR_REFNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MOD_TLR_ORG_REFNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OPNAC_DT")
                        .HasColumnType("datetime2");

                    b.Property<string>("OPNAC_ORG_REFNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PART_RL_TP_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RCRD_CLNUP_STSCD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RCRD_VRSN_SN")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CUSNO", "LGPER_CODE");

                    b.ToTable("AppCcicBasics", null, t =>
                        {
                            t.HasComment("对公客户基础信息");
                        });
                });

            modelBuilder.Entity("Wallee.Boc.DataPlane.TDcmp.CcicCustomerTypeOrgs.CcicCustomerTypeOrg", b =>
                {
                    b.Property<string>("CUSNO")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LGPER_CODE")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ADMN_HIER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CRTR_TLR_REFNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CRT_DTTM")
                        .HasColumnType("datetime2");

                    b.Property<string>("CRT_TLR_ORG_REFNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CUR_ACDT_PERI")
                        .HasColumnType("datetime2");

                    b.Property<string>("DEL_FLAG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ENTP_CHAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ENTP_ECN_CMCLF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ENTP_SZ_MOIMI_STD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ENTP_SZ_TB_STD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ENV_AND_SOC_RSK_CTGY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GOVT_FUNC_TP_GOVT_UNIQ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HOSP_CUS_LEVEL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDY_REFNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LAST_MNT_STS_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LAST_MOD_DTTM")
                        .HasColumnType("datetime2");

                    b.Property<string>("LTST_MOD_TLR_REFNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MOD_TLR_ORG_REFNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NONL_SUFLT_ORG_FLAG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NTECO_DEPT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ORG_TAX_RSDNT_IDNT_TP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ORG_TP_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ORG_TYPE_TAX")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OWS_STC_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RCRD_CLNUP_STSCD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RCRD_VRSN_SN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RESP_ITFO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RSDNT_TAX_IDR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEI_TP_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TAX_MNT_EFF_DT")
                        .HasColumnType("datetime2");

                    b.Property<string>("YES_SUPR_LGPER_OR_SPVS_UNIT_FLAG")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CUSNO", "LGPER_CODE");

                    b.ToTable("AppCcicCustomerTypeOrgs", null, t =>
                        {
                            t.HasComment("对公客户类别信息-组织-a09");
                        });
                });

            modelBuilder.Entity("Wallee.Boc.DataPlane.TDcmp.CcicCustomerTypes.CcicCustomerType", b =>
                {
                    b.Property<string>("CUSNO")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LGPER_CODE")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("AVY_SCOR")
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("CRERU_TYPE_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CRTR_TLR_REFNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CRT_DTTM")
                        .HasColumnType("datetime2");

                    b.Property<string>("CRT_TLR_ORG_REFNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CUR_ACDT_PERI")
                        .HasColumnType("datetime2");

                    b.Property<string>("CUS_BLG_LINE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUS_CTGY_LCL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUS_CTGY_STS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUS_LGCLS_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("CUS_LYLT")
                        .HasColumnType("decimal(6,2)");

                    b.Property<string>("CUS_LYR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUS_ORG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUS_SRC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUS_SUBTP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUS_TP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DEL_FLAG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ED_IDY_CUS_CHAR_CTGY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ED_IDY_CUS_CTGY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FAIRS_CUS_CTGY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HEAL_CUS_TP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HOSP_CUS_CHAR_CTGY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("INDCL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LAST_MNT_STS_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LAST_MOD_DTTM")
                        .HasColumnType("datetime2");

                    b.Property<string>("LTST_MOD_TLR_REFNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LWRS_FACT_OF_CMRC_ORG_TP_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MOD_TLR_ORG_REFNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NEW_MODE_CUS_IDR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PPPC_CUS_LEVEL_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RCRD_CLNUP_STSCD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RCRD_VRSN_SN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("REQ_PRVD_FNRPT_FRQC_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SOD_ADIV_GOVT_UNIQ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SPLMT_CUS_TP_RSK_CLBR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SPV_CUS_TP")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CUSNO", "LGPER_CODE");

                    b.ToTable("AppCcicCustomerTypes", null, t =>
                        {
                            t.HasComment("对公客户类别信息-a08");
                        });
                });

            modelBuilder.Entity("Wallee.Boc.DataPlane.TDcmp.CcicGeneralOrgs.CcicGeneralOrg", b =>
                {
                    b.Property<string>("CUSNO")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LGPER_CODE")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BSC_DEP_ACCNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BSC_DEP_ACC_ACOP_APVL_NO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BSC_DEP_ACC_DEPBK_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BSC_DEP_ACC_OPNAC_DT")
                        .HasColumnType("datetime2");

                    b.Property<string>("CO_TAOA_ATTCH_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CRTR_TLR_REFNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CRT_DTTM")
                        .HasColumnType("datetime2");

                    b.Property<string>("CRT_TLR_ORG_REFNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CUR_ACDT_PERI")
                        .HasColumnType("datetime2");

                    b.Property<string>("DEL_FLAG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ENJ_LCL_GOVT_PRFT_PC_TP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ENTP_DEVE_STRTG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ENTP_INTD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("EXST_OURBK_EQU_PCT")
                        .HasColumnType("decimal(6,2)");

                    b.Property<string>("FNC_SUBS_INCM_SRC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FNDS_SRC_INF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LAST_MNT_STS_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LAST_MOD_DTTM")
                        .HasColumnType("datetime2");

                    b.Property<string>("LOGO_IMAGE_FILE_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LOGO_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LTST_MOD_TLR_REFNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MOD_TLR_ORG_REFNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RCRD_CLNUP_STSCD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RCRD_VRSN_SN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WLTH_SRC_CNRG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WLTH_SRC_IS_OTHR_HOUR_NOTE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WLTH_SRC_OVSEA")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CUSNO", "LGPER_CODE");

                    b.ToTable("AppCcicGeneralOrgs", null, t =>
                        {
                            t.HasComment("对公概况-组织-a18");
                        });
                });

            modelBuilder.Entity("Wallee.Boc.DataPlane.TDcmp.CcicIds.CcicId", b =>
                {
                    b.Property<string>("CUSNO")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CRDT_TP")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CRDT_SN")
                        .HasColumnType("int");

                    b.Property<string>("LGPER_CODE")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("ANINS_DT")
                        .HasColumnType("datetime2");

                    b.Property<string>("CRAD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CRDT_ATR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CRDT_EXP_DT")
                        .HasColumnType("datetime2");

                    b.Property<string>("CRDT_IMAGE_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CRDT_PRM_VLD_FLAG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CRDT_SGIS_ADDR4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CRDT_SGIS_AHR_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CRDT_SGIS_DT")
                        .HasColumnType("datetime2");

                    b.Property<string>("CRDT_STS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CRTR_TLR_REFNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CRT_DTTM")
                        .HasColumnType("datetime2");

                    b.Property<string>("CRT_TLR_ORG_REFNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CUR_ACDT_PERI")
                        .HasColumnType("datetime2");

                    b.Property<string>("DEL_FLAG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ID_INF_DES")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISSCT_AHR_LO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LAST_MNT_STS_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LAST_MOD_DTTM")
                        .HasColumnType("datetime2");

                    b.Property<string>("LTST_MOD_TLR_REFNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MOD_TLR_ORG_REFNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OTHR_CRTY_NOTE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RCRD_CLNUP_STSCD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RCRD_VRSN_SN")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CUSNO", "CRDT_TP", "CRDT_SN", "LGPER_CODE");

                    b.ToTable("AppCcicIds", null, t =>
                        {
                            t.HasComment("对公证件信息-a20");
                        });
                });

            modelBuilder.Entity("Wallee.Boc.DataPlane.TDcmp.CcicNames.CcicName", b =>
                {
                    b.Property<string>("CUSNO")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CUS_NAME_LANG")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LGPER_CODE")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CRTR_TLR_REFNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CRT_DTTM")
                        .HasColumnType("datetime2");

                    b.Property<string>("CRT_TLR_ORG_REFNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CUR_ACDT_PERI")
                        .HasColumnType("datetime2");

                    b.Property<string>("CUS_FRMNM_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CUS_FRMNM_NAME_ENDDT_PERI")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CUS_FRMNM_NAME_START_DT")
                        .HasColumnType("datetime2");

                    b.Property<string>("CUS_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CUS_NAME_START_DT")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CUS_NAME_TMT_DT")
                        .HasColumnType("datetime2");

                    b.Property<string>("CUS_OTHR_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CUS_OTHR_NAME_START_DT")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CUS_OTHR_NAME_TMT_DT")
                        .HasColumnType("datetime2");

                    b.Property<string>("CUS_OTHR_NAME_TP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUS_SHNM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CUS_SHNM_ENDDT_PERI")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CUS_SHNM_START_DT")
                        .HasColumnType("datetime2");

                    b.Property<string>("CUS_SHTNM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CUS_SHTNM_ENDDT_PERI")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CUS_SHTNM_START_DT")
                        .HasColumnType("datetime2");

                    b.Property<string>("CUS_SWIFT_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CUS_SWIFT_NAME_ENDDT_PERI")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CUS_SWIFT_NAME_START_DT")
                        .HasColumnType("datetime2");

                    b.Property<string>("DEL_FLAG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LAST_MNT_STS_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LAST_MOD_DTTM")
                        .HasColumnType("datetime2");

                    b.Property<string>("LTST_MOD_TLR_REFNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MOD_TLR_ORG_REFNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RCRD_CLNUP_STSCD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RCRD_VRSN_SN")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CUSNO", "CUS_NAME_LANG", "LGPER_CODE");

                    b.ToTable("AppCcicNames", null, t =>
                        {
                            t.HasComment("对公名称信息-a22");
                        });
                });

            modelBuilder.Entity("Wallee.Boc.DataPlane.TDcmp.CcicPersonalRelations.CcicPersonalRelation", b =>
                {
                    b.Property<string>("CUSNO")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("REL_RL")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PRINT_CUSNO_YARD")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LGPER_CODE")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CRTR_TLR_REFNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CRT_DTTM")
                        .HasColumnType("datetime2");

                    b.Property<string>("CRT_TLR_ORG_REFNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CUR_ACDT_PERI")
                        .HasColumnType("datetime2");

                    b.Property<string>("DEL_FLAG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LAST_MNT_STS_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LAST_MOD_DTTM")
                        .HasColumnType("datetime2");

                    b.Property<string>("LTST_MOD_TLR_REFNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MOD_TLR_ORG_REFNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RCRD_CLNUP_STSCD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RCRD_VRSN_SN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("REL_DES")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("REL_END_DT")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("REL_END_TIME")
                        .HasColumnType("time");

                    b.Property<DateTime?>("REL_STRT_DT")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("REL_STRT_TIME")
                        .HasColumnType("time");

                    b.HasKey("CUSNO", "REL_RL", "PRINT_CUSNO_YARD", "LGPER_CODE");

                    b.ToTable("AppCcicPersonalRelations", null, t =>
                        {
                            t.HasComment("对公人员关系-a24");
                        });
                });

            modelBuilder.Entity("Wallee.Boc.DataPlane.TDcmp.CcicPhones.CcicPhone", b =>
                {
                    b.Property<string>("CUSNO")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UNIT_TEL_TP")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CNTEL_SN")
                        .HasColumnType("int");

                    b.Property<string>("LGPER_CODE")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ADDR_TP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CRTR_TLR_REFNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CRT_DTTM")
                        .HasColumnType("datetime2");

                    b.Property<string>("CRT_TLR_ORG_REFNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CUR_ACDT_PERI")
                        .HasColumnType("datetime2");

                    b.Property<string>("DEL_FLAG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DMST_ARCD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ELC_ADTP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EXN_NO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LAST_MNT_STS_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LAST_MOD_DTTM")
                        .HasColumnType("datetime2");

                    b.Property<string>("LTST_MOD_TLR_REFNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MOD_TLR_ORG_REFNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RCRD_CLNUP_STSCD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RCRD_VRSN_SN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("REL_DES")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("REL_END_DT")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("REL_END_TIME")
                        .HasColumnType("time");

                    b.Property<DateTime?>("REL_STRT_DT")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("REL_STRT_TIME")
                        .HasColumnType("time");

                    b.Property<string>("REL_TP_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TEL_NO")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CUSNO", "UNIT_TEL_TP", "CNTEL_SN", "LGPER_CODE");

                    b.ToTable("AppCcicPhones", null, t =>
                        {
                            t.HasComment("对公名称信息-a22");
                        });
                });

            modelBuilder.Entity("Wallee.Boc.DataPlane.TDcmp.CcicPractices.CcicPractice", b =>
                {
                    b.Property<string>("CUSNO")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("OPRT_INF_SN")
                        .HasColumnType("int");

                    b.Property<string>("LGPER_CODE")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("AST_TAMT")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("AST_TAMT_CUR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("BRND_VAL")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("BRND_VAL_CUR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BRND_VISI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BRND_VISI_SURVY_ORG_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CMRC_AVY_PEAK_IDR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("CO_EMPE_AVGAG")
                        .HasColumnType("decimal(5,2)");

                    b.Property<int?>("CRER_PNUM")
                        .HasColumnType("int");

                    b.Property<string>("CROSS_IDY_OPRT_FLAG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CRTR_TLR_REFNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CRT_DTTM")
                        .HasColumnType("datetime2");

                    b.Property<string>("CRT_TLR_ORG_REFNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CUR_ACDT_PERI")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CUS_OPRT_STS_START_DT")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CUS_OPRT_STS_TMT_DT")
                        .HasColumnType("datetime2");

                    b.Property<string>("DEL_FLAG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ENTP_GRWUP_STG_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ENTP_OPRT_STS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ENTP_PD_LIFE_CYCLE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("INFO_OVW")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LAST_MNT_STS_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LAST_MOD_DTTM")
                        .HasColumnType("datetime2");

                    b.Property<string>("LEAD_PD_AND_BRND_DES")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LTST_MOD_TLR_REFNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MAIN_ORI_MTRL_DES")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MOD_TLR_ORG_REFNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("NTAST_AMT")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("NTAST_CUR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OPRT_INFO_STAT_INST")
                        .HasColumnType("int");

                    b.Property<string>("OPRT_INFO_STAT_YR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RCRD_CLNUP_STSCD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RCRD_VRSN_SN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("SALES_AMT")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("SALES_CUR")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CUSNO", "OPRT_INF_SN", "LGPER_CODE");

                    b.ToTable("AppCcicPractices", null, t =>
                        {
                            t.HasComment("对公运营信息-a26");
                        });
                });

            modelBuilder.Entity("Wallee.Boc.DataPlane.TDcmp.CcicRegisters.CcicRegister", b =>
                {
                    b.Property<string>("CUSNO")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LGPER_CODE")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("ARCPT_AMT")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("ARCPT_CUR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AVY_TRTY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BSN_SCOP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BSN_SPVS_UNIT_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BZSCP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CARE_UNBDG_TP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CRTR_TLR_REFNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CRT_DTTM")
                        .HasColumnType("datetime2");

                    b.Property<string>("CRT_TLR_ORG_REFNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CUR_ACDT_PERI")
                        .HasColumnType("datetime2");

                    b.Property<string>("DEL_FLAG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ENTP_INCDT_PERI")
                        .HasColumnType("datetime2");

                    b.Property<string>("FEE_SRC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HOST_UNIT_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDBZ_BSNLC_BZSCP_AND_MOD_DES")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDBZ_BSNLC_COMP_ITFO_DES")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDBZ_BSNLC_WORD_NO_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ISSU_EQU_AMT")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("IVS_PRJ_ENTP_INFO_NOTE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LAST_MNT_STS_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LAST_MOD_DTTM")
                        .HasColumnType("datetime2");

                    b.Property<string>("LGPER_FLAG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LOUT_DT")
                        .HasColumnType("datetime2");

                    b.Property<string>("LTST_MOD_TLR_REFNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MAINB_1_SCOP_NOTE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MAINB_2_SCOP_NOTE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MAINB_3_SCOP_NOTE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MIX_SCOP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MOD_TLR_ORG_REFNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NO_HV_LGPER_QUA_OF_CUS_TP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OPRT_MATU")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OPRT_MATU_START_DT")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("OPRT_MATU_TMT_DT")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("ORGN_FNDS_AMT")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("ORGN_FNDS_CUR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PRCLN_AND_BSN_SCOP_DES")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RCRD_CLNUP_STSCD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RCRD_VRSN_SN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("RC_AMT")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("RGCAP_CUR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RGST_CNRG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SEAR_DT")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("SHR_TOTAL")
                        .HasColumnType("decimal(24,6)");

                    b.HasKey("CUSNO", "LGPER_CODE");

                    b.ToTable("AppCcicRegisters", null, t =>
                        {
                            t.HasComment("对公注册信息-a28");
                        });
                });

            modelBuilder.Entity("Wallee.Boc.DataPlane.TDcmp.CcicSignOrgs.CcicSignOrg", b =>
                {
                    b.Property<string>("CUSNO")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LGPER_CODE")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AGRO_FLAG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ARAAF_ENTP_FLAG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CHINA_SCE_FLAG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CRTR_TLR_REFNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CRT_DTTM")
                        .HasColumnType("datetime2");

                    b.Property<string>("CRT_TLR_ORG_REFNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CUR_ACDT_PERI")
                        .HasColumnType("datetime2");

                    b.Property<string>("DEL_FLAG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EU_ORG_FLAG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EXMPT_RGS_SOC_GROU_FLAG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FNC_PVRT_FLAG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HTCHE_FLAG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ILLG_DISH_FLAG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LAST_MNT_STS_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LAST_MOD_DTTM")
                        .HasColumnType("datetime2");

                    b.Property<string>("LSTCO_FLAG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LTST_MOD_TLR_REFNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MOD_TLR_ORG_REFNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NON_PFT_PROP_ORG_FLAG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PS_LIT_FTA_WITH_FLAG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PUBEN_FLAG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RCRD_CLNUP_STSCD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RCRD_VRSN_SN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SATI_ENTP_FLAG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SERIS_ILLG_RCRD_FLAG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SPCL_ECORE_ENTP_FLAG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SUPR_UNIT_LGPER_PNP_TP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TPE_FLAG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UNIC_ENTP_FLAG")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CUSNO", "LGPER_CODE");

                    b.ToTable("AppCcicSignOrgs", null, t =>
                        {
                            t.HasComment("对公重要标志信息-组织-a35");
                        });
                });

            modelBuilder.Entity("Wallee.Boc.DataPlane.WorkFlows.CcicCusInfos.CcicCusInfoWorkFlow", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompletedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<DateTime>("DataDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AppCcicCusInfoWorkFlows", null, t =>
                        {
                            t.HasComment("信息管理平台工作流");
                        });
                });

            modelBuilder.Entity("Volo.Abp.AuditLogging.AuditLogAction", b =>
                {
                    b.HasOne("Volo.Abp.AuditLogging.AuditLog", null)
                        .WithMany("Actions")
                        .HasForeignKey("AuditLogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.AuditLogging.EntityChange", b =>
                {
                    b.HasOne("Volo.Abp.AuditLogging.AuditLog", null)
                        .WithMany("EntityChanges")
                        .HasForeignKey("AuditLogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.AuditLogging.EntityPropertyChange", b =>
                {
                    b.HasOne("Volo.Abp.AuditLogging.EntityChange", null)
                        .WithMany("PropertyChanges")
                        .HasForeignKey("EntityChangeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityRoleClaim", b =>
                {
                    b.HasOne("Volo.Abp.Identity.IdentityRole", null)
                        .WithMany("Claims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityUserClaim", b =>
                {
                    b.HasOne("Volo.Abp.Identity.IdentityUser", null)
                        .WithMany("Claims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityUserLogin", b =>
                {
                    b.HasOne("Volo.Abp.Identity.IdentityUser", null)
                        .WithMany("Logins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityUserOrganizationUnit", b =>
                {
                    b.HasOne("Volo.Abp.Identity.OrganizationUnit", null)
                        .WithMany()
                        .HasForeignKey("OrganizationUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Volo.Abp.Identity.IdentityUser", null)
                        .WithMany("OrganizationUnits")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityUserRole", b =>
                {
                    b.HasOne("Volo.Abp.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Volo.Abp.Identity.IdentityUser", null)
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityUserToken", b =>
                {
                    b.HasOne("Volo.Abp.Identity.IdentityUser", null)
                        .WithMany("Tokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.Identity.OrganizationUnit", b =>
                {
                    b.HasOne("Volo.Abp.Identity.OrganizationUnit", null)
                        .WithMany()
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("Volo.Abp.Identity.OrganizationUnitRole", b =>
                {
                    b.HasOne("Volo.Abp.Identity.OrganizationUnit", null)
                        .WithMany("Roles")
                        .HasForeignKey("OrganizationUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Volo.Abp.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.OpenIddict.Authorizations.OpenIddictAuthorization", b =>
                {
                    b.HasOne("Volo.Abp.OpenIddict.Applications.OpenIddictApplication", null)
                        .WithMany()
                        .HasForeignKey("ApplicationId");
                });

            modelBuilder.Entity("Volo.Abp.OpenIddict.Tokens.OpenIddictToken", b =>
                {
                    b.HasOne("Volo.Abp.OpenIddict.Applications.OpenIddictApplication", null)
                        .WithMany()
                        .HasForeignKey("ApplicationId");

                    b.HasOne("Volo.Abp.OpenIddict.Authorizations.OpenIddictAuthorization", null)
                        .WithMany()
                        .HasForeignKey("AuthorizationId");
                });

            modelBuilder.Entity("Volo.Abp.TenantManagement.TenantConnectionString", b =>
                {
                    b.HasOne("Volo.Abp.TenantManagement.Tenant", null)
                        .WithMany("ConnectionStrings")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.AuditLogging.AuditLog", b =>
                {
                    b.Navigation("Actions");

                    b.Navigation("EntityChanges");
                });

            modelBuilder.Entity("Volo.Abp.AuditLogging.EntityChange", b =>
                {
                    b.Navigation("PropertyChanges");
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityRole", b =>
                {
                    b.Navigation("Claims");
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityUser", b =>
                {
                    b.Navigation("Claims");

                    b.Navigation("Logins");

                    b.Navigation("OrganizationUnits");

                    b.Navigation("Roles");

                    b.Navigation("Tokens");
                });

            modelBuilder.Entity("Volo.Abp.Identity.OrganizationUnit", b =>
                {
                    b.Navigation("Roles");
                });

            modelBuilder.Entity("Volo.Abp.TenantManagement.Tenant", b =>
                {
                    b.Navigation("ConnectionStrings");
                });
#pragma warning restore 612, 618
        }
    }
}
